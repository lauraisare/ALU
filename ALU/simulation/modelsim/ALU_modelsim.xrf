vendor_name = ModelSim
source_file = 1, C:/Users/laura/Documents/ALU/ALU.vhd
source_file = 1, C:/Users/laura/Documents/ALU/db/ALU.cbx.xml
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = ALU
instance = comp, \Result[0]~output\, Result[0]~output, ALU, 1
instance = comp, \Result[1]~output\, Result[1]~output, ALU, 1
instance = comp, \Result[2]~output\, Result[2]~output, ALU, 1
instance = comp, \Result[3]~output\, Result[3]~output, ALU, 1
instance = comp, \Result[4]~output\, Result[4]~output, ALU, 1
instance = comp, \Result[5]~output\, Result[5]~output, ALU, 1
instance = comp, \Result[6]~output\, Result[6]~output, ALU, 1
instance = comp, \Result[7]~output\, Result[7]~output, ALU, 1
instance = comp, \NZVC[0]~output\, NZVC[0]~output, ALU, 1
instance = comp, \NZVC[1]~output\, NZVC[1]~output, ALU, 1
instance = comp, \NZVC[2]~output\, NZVC[2]~output, ALU, 1
instance = comp, \NZVC[3]~output\, NZVC[3]~output, ALU, 1
instance = comp, \A[0]~input\, A[0]~input, ALU, 1
instance = comp, \B[0]~input\, B[0]~input, ALU, 1
instance = comp, \Add0~0\, Add0~0, ALU, 1
instance = comp, \ALU_Sel[1]~input\, ALU_Sel[1]~input, ALU, 1
instance = comp, \ALU_Sel[2]~input\, ALU_Sel[2]~input, ALU, 1
instance = comp, \ALU_Sel[0]~input\, ALU_Sel[0]~input, ALU, 1
instance = comp, \Equal0~0\, Equal0~0, ALU, 1
instance = comp, \Equal0~0clkctrl\, Equal0~0clkctrl, ALU, 1
instance = comp, \Result[0]$latch\, Result[0]$latch, ALU, 1
instance = comp, \B[1]~input\, B[1]~input, ALU, 1
instance = comp, \A[1]~input\, A[1]~input, ALU, 1
instance = comp, \Add0~2\, Add0~2, ALU, 1
instance = comp, \Result[1]$latch\, Result[1]$latch, ALU, 1
instance = comp, \B[2]~input\, B[2]~input, ALU, 1
instance = comp, \A[2]~input\, A[2]~input, ALU, 1
instance = comp, \Add0~4\, Add0~4, ALU, 1
instance = comp, \Result[2]$latch\, Result[2]$latch, ALU, 1
instance = comp, \B[3]~input\, B[3]~input, ALU, 1
instance = comp, \A[3]~input\, A[3]~input, ALU, 1
instance = comp, \Add0~6\, Add0~6, ALU, 1
instance = comp, \Result[3]$latch\, Result[3]$latch, ALU, 1
instance = comp, \B[4]~input\, B[4]~input, ALU, 1
instance = comp, \A[4]~input\, A[4]~input, ALU, 1
instance = comp, \Add0~8\, Add0~8, ALU, 1
instance = comp, \Result[4]$latch\, Result[4]$latch, ALU, 1
instance = comp, \A[5]~input\, A[5]~input, ALU, 1
instance = comp, \B[5]~input\, B[5]~input, ALU, 1
instance = comp, \Add0~10\, Add0~10, ALU, 1
instance = comp, \Result[5]$latch\, Result[5]$latch, ALU, 1
instance = comp, \B[6]~input\, B[6]~input, ALU, 1
instance = comp, \A[6]~input\, A[6]~input, ALU, 1
instance = comp, \Add0~12\, Add0~12, ALU, 1
instance = comp, \Result[6]$latch\, Result[6]$latch, ALU, 1
instance = comp, \B[7]~input\, B[7]~input, ALU, 1
instance = comp, \A[7]~input\, A[7]~input, ALU, 1
instance = comp, \Add0~14\, Add0~14, ALU, 1
instance = comp, \Result[7]$latch\, Result[7]$latch, ALU, 1
instance = comp, \Add0~16\, Add0~16, ALU, 1
instance = comp, \NZVC[0]$latch\, NZVC[0]$latch, ALU, 1
instance = comp, \ALU_PROCESS~0\, ALU_PROCESS~0, ALU, 1
instance = comp, \NZVC[1]$latch\, NZVC[1]$latch, ALU, 1
instance = comp, \Equal1~0\, Equal1~0, ALU, 1
instance = comp, \Equal1~1\, Equal1~1, ALU, 1
instance = comp, \Equal1~2\, Equal1~2, ALU, 1
instance = comp, \NZVC[2]$latch\, NZVC[2]$latch, ALU, 1
